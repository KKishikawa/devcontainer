name: Build and Publish Docker Image

on:
  push:
    tags:
      - "*"
# tagのprefixをビルド対象のイメージとして扱い、-v以降をバージョンとして扱う
# 例: vscode/fnm-v1.0.0 -> vscode/fnm 1.0.0
# betaバージョンの場合は、バージョンにbetaを含める その場合、latestタグは付与されない
# 例: vscode/fnm-v1.0.0-beta -> vscode/fnm 1.0.0-beta
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Parse Tag
        id: tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          IMAGE_NAME=${TAG_NAME%-v*} && echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          IMAGE_VERSION=${TAG_NAME##*-v} && echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV
          IS_BETA=0
          if [[ $IMAGE_VERSION == *beta* ]]; then
            IS_BETA=1
          fi
          echo "IS_BETA=$IS_BETA" >> $GITHUB_ENV
      - name: Check if tag is valid
        run: |
          if [ -z "${{ steps.tag.outputs.IMAGE_VERSION }}" ] || [ -z "${{ steps.tag.outputs.IMAGE_NAME }}" ]; then
            echo "Tag is not valid. Exiting..."
            exit 1
          fi
          if [ ! -f "${{ steps.tag.outputs.IMAGE_NAME }}/Dockerfile" ]; then
            echo "Dockerfile not found in ${{ steps.tag.outputs.IMAGE_NAME }}. Exiting..."
            exit 1
          fi
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: create metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ steps.tag.outputs.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ steps.tag.outputs.IS_BETA == 0 }}
            type=raw,value=${{ steps.tag.outputs.IMAGE_VERSION }}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.tag.outputs.IMAGE_NAME }}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
